#coding: utf-8

import telebot
import re
import settings as config
from threading import Thread
import time
import requests

bot = telebot.TeleBot(token=config.bot_token, parse_mode='html')

k = config.Keyboards()
s = config.User()
g = config.Game(bot)
p = config.Payments()
se = config.Settings()
name = ''
minbet = config.minbet

@bot.message_handler(content_types=['text'])
def start(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    if message.chat.type == 'private' and not(s.is_banned(message.chat.id)):
        global name
        name = message.from_user.first_name
        if re.match('/console', message.text) and se.is_admin(message.chat.id):
            bot.send_message(message.chat.id, f'üìù <b>–ö–û–ù–°–û–õ–¨</b>\n\n‚ñ™Ô∏è  –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è: <code>{se.money_today} RUB</code>\n‚ñ™Ô∏è –ú–∏–Ω.–¥–µ–ø–æ–∑–∏—Ç: <code>{se.mindeposit} RUB</code>\n‚ñ™Ô∏è –ú–∏–Ω.–≤—ã–≤–æ–¥: <code>{se.minwithdrawal} RUB</code>\n‚ñ™Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π %: <code>{se.refpercents}%</code>\n‚ñ™Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: <code>{se.refsum} RUB</code>\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é</b>:', reply_markup=k.console_menu())
        if re.match('/start', message.text):
            try: 
                data = message.text.split()[1]
                if re.match('game_', data):
                    if not(s.is_registered(message.chat.id)):
                        s.register_user(message.chat.id, message.from_user.first_name)
                    game = int(data.replace('game_', ''))
                    g.refgames[str(message.chat.id)] = game
                    game = g.get_game(game)
                    bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É', reply_markup=k.join_game_by_ref(game))
                elif data.isdigit():
                    try:
                        if not(s.is_registered(message.chat.id)) and s.is_registered(int(data)):
                            s.register_user(message.chat.id, message.from_user.first_name, invited=int(data))
                            bot.send_message(message.chat.id, 'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π, –∫–∞–∫ –Ω–æ–≤–∏—á–∫—É –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ!</b>')
                            s.add_referal_to_user(int(data), message.chat.id)
                            s.add_to_user_balance(int(data), se.refsum)
                            bot.send_message(int(data), f'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ</b> <code>{se.refsum} RUB</code> <b>–∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—à—É –∏–≥—Ä—É!</b>')
                            bot.send_message(config.game_results[0], f'üí∞ –ù–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <a href="tg://user?id={int(data)}">{s.get_user(int(data))["name"]}</a> –±—ã–ª–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ <code>{se.refsum} RUB</code> –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
                        else:
                            pass
                    except:
                        if not(s.is_registered(message.chat.id)):
                            s.register_user(message.chat.id, message.from_user.first_name)
                            bot.send_message(message.chat.id, 'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π, –∫–∞–∫ –Ω–æ–≤–∏—á–∫—É –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ!</b>')
                    bot.send_message(message.chat.id, f'ü§ó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ @{config.bot_username}!\n\n‚ñ™Ô∏è –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ —á—É–∂–æ–π –∫–æ–º–Ω–∞—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫–µ <b>üé≤ –ò–≥—Ä–∞</b>.\n\n‚ö†Ô∏è –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª –≤ —Ä–∞–∑–¥–µ–ª–µ <b>üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.</b>', reply_markup=k.menu_main())
            except IndexError:
                if not(s.is_registered(message.chat.id)):
                    s.register_user(message.chat.id, message.from_user.first_name)
                    bot.send_message(message.chat.id, 'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π, –∫–∞–∫ –Ω–æ–≤–∏—á–∫—É –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ!</b>')
                bot.send_message(message.chat.id, f'ü§ó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ @{config.bot_username}!\n\n‚ñ™Ô∏è –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ —á—É–∂–æ–π –∫–æ–º–Ω–∞—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫–µ <b>üé≤ –ò–≥—Ä–∞</b>.\n\n‚ö†Ô∏è –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª –≤ —Ä–∞–∑–¥–µ–ª–µ <b>üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.</b>', reply_markup=k.menu_main())
            except:
                raise
                
        elif message.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å':
            if not(s.is_registered(message.chat.id)):
                s.register_user(message.chat.id, message.from_user.first_name)
                bot.send_message(message.chat.id, 'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π, –∫–∞–∫ –Ω–æ–≤–∏—á–∫—É –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ!</b>')
            user = s.get_user(message.chat.id)
            with open('images/profile.jpg', 'rb') as f:
                bot.send_photo(message.chat.id, photo=f, caption=f'üë§ <b>–ü–†–û–§–ò–õ–¨</b>: \n\nüÜî <b>–í–∞—à ID</b>: <code>{message.chat.id}</code>\nüìÖ <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>: <code>{user["regdate"]}</code>\n\nüí≥ <b>–ë–∞–ª–∞–Ω—Å</b>: <code>{user["balance"]} RUB</code>', reply_markup=k.profile())
        elif message.text == 'üé≤ –ò–≥—Ä–∞':
            if not(s.is_registered(message.chat.id)):
                s.register_user(message.chat.id, message.from_user.first_name)
                bot.send_message(message.chat.id, 'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π, –∫–∞–∫ –Ω–æ–≤–∏—á–∫—É –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ!</b>')
            m, b = g.get_rooms()
            bot.send_message(message.chat.id, '<b>–°–æ–∑–¥–∞–π—Ç–µ  –Ω–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –∏–≥—Ä—ã –∏–ª–∏ –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –∫–æ–º–Ω–∞—Ç—ã –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤!</b>', reply_markup=k.menu_games(m, b))
        elif message.text == '‚Ü™Ô∏è –ù–∞–∑–∞–¥':
            if not(s.is_registered(message.chat.id)):
                s.register_user(message.chat.id, message.from_user.first_name)
                bot.send_message(message.chat.id, 'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π, –∫–∞–∫ –Ω–æ–≤–∏—á–∫—É –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ!</b>')
            bot.send_message(message.chat.id, 'üö´ <b>–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!</b>', reply_markup=k.menu_main())
        elif message.text == 'üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
            if not(s.is_registered(message.chat.id)):
                s.register_user(message.chat.id, message.from_user.first_name)
                bot.send_message(message.chat.id, 'üíµ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π, –∫–∞–∫ –Ω–æ–≤—á–∏–∫—É –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ!</b>')
            bot.send_message(message.chat.id, '‚ö†Ô∏è–í–Ω–∏–º–∞–Ω–∏–µ! –ù–µ–∑–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å ‚ÑπÔ∏è <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π.</b>\n\n–î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–æ–º –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª ‚öôÔ∏è <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∏.</b>', reply_markup=k.info())
    elif s.is_banned(message.chat.id):
        bot.send_message(message.chat.id, 'üö´ <b>–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã –±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!</b>', reply_markup=k.rm())

def deposit(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    if not(s.is_banned(message.chat.id)):
        amount = message.text
        try:
            #try:
              #  amount = int(amount)
             #   amount = float(amount)
            #except:
            if True:
                amount = int(amount)
            if amount >= se.mindeposit:
                link, order_id, time = p.create_payment(message.chat.id, amount)
                bot.send_message(message.chat.id, f'üí≥ <b>–ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê</b>\n\nüÜîID: <code>{order_id}</code>\n\nüí≥–°—É–º–º–∞: <code>{amount} RUB</code>\n\nüìù–û–ø–ª–∞—Ç–∞: {link}\n\n<b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ì–æ—Ç–æ–≤–æ" —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞, –∏–Ω–∞—á–µ –ø–ª–∞—Ç–µ–∂ –Ω–µ –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω!</b>', reply_markup=k.payment())
            else:
                bot.send_message(message.chat.id, f'üö´ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ - </b><code>{se.mindeposit} RUB</code>!', reply_markup=k.menu_main())
        except:
            bot.send_message(message.chat.id, f'üö´ <b>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –Ω–µ –º–µ–Ω–µ–µ {se.mindeposit}!</b>', reply_markup=k.menu_main())
    else:
        bot.send_message(message.chat.id, 'üö´ <b>–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã–±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!</b>', reply_markup=k.rm())
def perc(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    perc = message.text.replace(' ', '').replace('%', '')
    try:
        perc = float(perc)
        se.setPerc(perc)
        bot.send_message(message.chat.id, '‚úÖ <b>–ó–Ω–∞—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±—å—é')
def mindeposit(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    am = message.text.replace(' ', '')
    try:
        am = int(am)
        se.setMinDeposit(am)
        bot.send_message(message.chat.id, '‚úÖ <b>–ó–Ω–∞—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!')
def minwithdrawal(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    am = message.text.replace(' ', '')
    try:
        am = int(am)
        se.setMinWithdrawal(am)
        bot.send_message(message.chat.id, '‚úÖ <b>–ó–Ω–∞—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!')
def balance_update_id(message):
    user = message.text
    try:
        if s.is_registered(int(user)):
            user = int(user)
            data = s.get_user(user)
            msg = bot.send_message(message.chat.id, f'üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {data["name"]}</b>:\n\nüÜî ID: {data["id"]}\nüí∞ –ë–∞–ª–∞–Ω—Å: <code>{data["balance"]} RUB</code>\n\nüìù <b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>', reply_markup=k.rm())
            se.addbalance_user = user
            bot.register_next_step_handler(msg, balance_update_sum)
        else:
            bot.send_message(message.chat.id, f'üö´ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å c ID {int(user)} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!')
def balance_update_sum(message):
    am = message.text
    try:
        am = int(am)
        #print(am)
        user_id = se.addbalance_user
        data = s.get_user(user_id)
        #print(data)
        s.add_to_user_balance(user_id, am)
        msg = bot.send_message(message.chat.id, f'‚úÖ <b>–°—Ä–µ–¥—Å—Ç–≤–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {data["name"]}!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!', reply_markup=k.console_menu())
def referalsum(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    am = message.text.replace(' ', '')
    try:
        am = float(am)
        se.setRefSum(am)
        bot.send_message(message.chat.id, '‚úÖ <b>–ó–Ω–∞—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!')
def referalperc(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    perc = message.text.replace(' ', '').replace('%', '')
    try:
        perc = float(perc)
        se.setRefPerc(perc)
        bot.send_message(message.chat.id, '‚úÖ <b>–ó–Ω–∞—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±—å—é!')
def ban(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    user = message.text
    try:
        user = int(user)
        if s.is_registered(user):
            s.ban_user(user)
            bot.send_message(message.chat.id, '‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</b>', reply_markup=k.console_menu())
        else:
            bot.send_message(message.chat.id, 'üö´ <b>–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!')
def unban(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    user = message.text
    try:
        user = int(user)
        if s.is_registered(user):
            s.unban_user(user)
            bot.send_message(message.chat.id, '‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</b>', reply_markup=k.console_menu())
        else:
            bot.send_message(message.chat.id, 'üö´ <b>–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!</b>', reply_markup=k.console_menu())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–û—à–∏–±–∫–∞</b>: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!')

def create_game(message):
    try:
        bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id-1, reply_markup='')
    except:
        pass
    def players(room_id, message, link):
        bot.send_message(message.chat.id, f'<b>üé≤ –í–∞—à–∞ –∫–æ–º–Ω–∞—Ç–∞</b>: \n\n\nüìÑ <i>–°—Å—ã–ª–∫–∞ –¥–ª—è –¥—Ä—É–≥–∞</i>: {link}\n\n‚ÑπÔ∏è –ò–≥—Ä–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –∫ –∏–≥—Ä–µ.', reply_markup=k.rm())
        while True:
            if g.get_game(str(room_id))['guest'] != {}:
                name = g.get_game(str(room_id))['guest']['name']
                id_owner = g.get_game(str(room_id))["owner"]["id"]
                id_guest = g.get_game(str(room_id))["guest"]["id"]
                players = f'üë§ <a href="tg://user?id={id_owner}">{g.get_game(room_id)["owner"]["name"]}</a>\nüë§ <a href="tg://user?id={id_guest}">{g.get_game(room_id)["guest"]["name"]}</a>'
                bot.send_message(message.chat.id, f'üé≤ <b>–ò–≥—Ä–∞ #{g.get_game(str(room_id))["key"]}</b>\n\nü•ã <b>–ò–≥—Ä–æ–∫–∏</b>:\n{players}\n\nüí∞ <b>–°—Ç–∞–≤–∫–∞</b>: <code>{g.get_game(str(room_id))["bet"]} RUB</code>')
                winner, am, loser = g.start_game(str(room_id))
                bet = (am*2)/100*(100-se.percent)
                bot.send_message(winner, f'‚úÖ <b>–í—ã –ø–æ–±–µ–¥–∏–ª–∏!</b>\n\n<b>–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ {bet} RUB!</b>', reply_markup=k.menu_main())
                bot.send_message(loser, f'üî¥ <b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!</b>\n\n<b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å</b>:\nüë§ <a href="tg://user?id={s.get_user(winner)["id"]}">{s.get_user(winner)["name"]}</a>', reply_markup=k.menu_main())
                s.add_to_user_balance(winner, bet-am)
                s.add_game_to_user(winner, g.get_game(room_id)['key'])
                s.add_game_to_user(loser, g.get_game(room_id)['key'])
                s.remove_from_balance(loser, am)
                s.set_user_in_room(winner, False)
                s.set_user_in_room(loser, False)
                try:
                    bot.send_message(config.game_results[0], f'üé≤ <b>–ò–≥—Ä–∞ #{g.get_game(str(room_id))["key"]}</b>\n\nü•ã <b>–ò–≥—Ä–æ–∫–∏</b>:\n{players}\n\nüí∞ <b>–°—Ç–∞–≤–∫–∞</b>: <code>{g.get_game(str(room_id))["bet"]} RUB</code>\n\nüèÜ <b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å</b>:\nüë§ <a href="tg://user?id={s.get_user(winner)["id"]}">{s.get_user(winner)["name"]}</a>')
                except:
                    pass
                g.end_game(str(room_id), bet)
                break
            #except KeyError:
                #print('ex')
                #time.sleep(1)
            else:
                time.sleep(1)
    if not(s.is_banned(message.chat.id)):
        bet = message.text
        try:
            bet = int(bet)
            if bet <= s.get_user(message.chat.id)["balance"] and not(s.in_room(message.chat.id)) and bet >= minbet:
                room_id, link = g.create_game(bet, message.chat.id, message.from_user.first_name)
                s.set_user_in_room(message.chat.id, True)
                thread = Thread(target=players, args=(room_id, message, link, ))
                thread.start()
            elif s.in_room(message.chat.id):
                bot.send_message(message.chat.id, 'üö´ <b>–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!</b>')
            elif bet < minbet:
                bot.send_message(message.chat.id, f'üö´ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - {minbet} —Ä—É–±–ª–µ–π!</b>', reply_markup=k.menu_main())
            else:
                bot.send_message(message.chat.id, 'üö´ <b>–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>', reply_markup=k.ask_for_pay())
        except:
            bot.send_message(message.chat.id, f'üö´ <b>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –Ω–µ –º–µ–Ω–µ–µ {minbet} –∏ –Ω–µ –ø—Ä–∏–≤—ã—à–∞—é—â–∏–º –í–∞—à –±–∞–ª–∞–Ω—Å.</b>', reply_markup=k.menu_main())
    else:
        bot.send_message(message.chat.id, 'üö´ <b>–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã–±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!</b>', reply_markup=k.rm())
def user_qiwi(message):
    qiwi = message.text.replace('+', '').replace(" ", '')
    if (re.match('79', qiwi) or re.match('38', qiwi) or re.match('375', qiwi)) and qiwi.isdigit():
        s.setQiwi(message.chat.id, int(qiwi))
        try:
            msg = bot.send_message(chat_id=message.chat.id, text='‚úÖ <b>–í–∞—à QIWI –Ω–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\nüìù <b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏:</b>', reply_markup=k.rm())#, message_id=message.message_id-1)
            bot.register_next_step_handler(msg, withdrawal)
        except:
            bot.send_message(message.chat.id, 'üö´ <b> –î–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è! \n\n‚òëÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –Ω–æ–º–µ—Ä–∞:\n‚ñ™Ô∏è –†–æ—Å—Å–∏–∏\n‚ñ™Ô∏è –£–∫—Ä–∞–∏–Ω—ã\n‚ñ™Ô∏è –ë–µ–ª–æ—Ä—É—Å—Å–∏–∏', reply_markup=k.back_to_prof())

    else:
        bot.send_message(message.chat.id, 'üö´ <b> –î–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è! \n\n‚òëÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –Ω–æ–º–µ—Ä–∞:\n‚ñ™Ô∏è –†–æ—Å—Å–∏–∏\n‚ñ™Ô∏è –£–∫—Ä–∞–∏–Ω—ã\n‚ñ™Ô∏è –ë–µ–ª–æ—Ä—É—Å—Å–∏–∏', reply_markup=k.back_to_prof())
def withdrawal(message):
    am = message.text
    try:
        am = int(am)
        if am <= s.get_user(message.chat.id)['balance'] and am >= se.minwithdrawal:
            s.remove_from_balance(message.chat.id, am)
            bot.send_message(message.chat.id, '‚òëÔ∏è <b>–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –í–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–Ω –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏.</b>', reply_markup=k.menu_main())
            user = s.get_user(message.chat.id)
            for i in se.admins:
                bot.send_message(int(i), f'üë§ <b>–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç</b> {user["name"]} | <b>ID</b>: <code>{user["id"]}</code>\n\nüí∞ <b>–°—É–º–º–∞:</b> <code>{am} RUB</code>\n\nüí≥ <b>QIWI</b>: <code>{s.getQiwi(user["id"])}</code>')
        elif am > s.get_user(message.chat.id)['balance']:
            bot.send_message(message.chat.id, 'üö´ <b>–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –í–∞–º–∏ —Å—É–º–º—ã!</b>', reply_markup=k.ask_for_pay())
        else:
            bot.send_message(message.chat.id, f'üö´ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ -</b> <code>{se.minwithdrawal} RUB</code>!', reply_markup=k.menu_main())
    except:
        bot.send_message(message.chat.id, 'üö´ <b>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â–∏–º –í–∞—à –±–∞–ª–∞–Ω—Å!</b>', reply_markup=k.menu_main())
def random_game(message):
    def rangame(message, bet):
        try:
            bet = int(bet)
            errors = ['Err', 'NF', 'FULL']
            bot.send_message(message.chat.id, 'üïì <b>–ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–º–Ω–∞—Ç—ã...</b>\n\n–ò–≥—Ä–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ.', reply_markup=k.rm())
            for i in range(120):
                game = g.join_random_game(message.chat.id, message.from_user.first_name, bet)
                if not(game in errors) and game != None:
                    if True:
                        id_owner = g.get_game(str(game))["owner"]["id"]
                        id_guest = g.get_game(str(game))["guest"]["id"]
                        players = f'üë§ <a href="tg://user?id={id_owner}">{g.get_game(game)["owner"]["name"]}</a>\nüë§ <a href="tg://user?id={id_guest}">{g.get_game(game)["guest"]["name"]}</a>'
                        bot.send_message(message.chat.id, f'üé≤ <b>–ò–≥—Ä–∞ #{g.get_game(game)["key"]}</b>\n\nü•ã <b>–ò–≥—Ä–æ–∫–∏</b>:\n{players}\n\nüí∞ <b>–°—Ç–∞–≤–∫–∞</b>: <code>{g.get_game(str(game))["bet"]} RUB</code>')
                        break
                    
                else:
                    if i == 119:
                        bot.send_message(message.chat.id, 'üö´ <b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã(!</b>', reply_markup=k.menu_main())
                        break
                    else:
                        time.sleep(1)
        except:
            bot.send_message(message.chat.id, 'üö´ <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ –∑–∞–Ω–æ–≤–æ, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /start!')
    if not(s.is_banned(message.chat.id)):
        bet = message.text
        try:
            if int(bet) <= s.get_user(message.chat.id)['balance'] and not(s.in_room(message.chat.id)) and int(bet) >= minbet:
                Thread(target=rangame, args=(message, bet,)).start()
            elif s.in_room(message.chat.id):
                bot.send_message(message.chat.id, 'üö´ <b>–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!</b>')
            elif int(bet) < minbet:
                bot.send_message(message.chat.id, f'üö´ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - {minbet} RUB!</b>', reply_markup=k.menu_main())
            else:
                bot.send_message(message.chat.id, 'üö´ <b>–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>', reply_markup=k.ask_for_pay())
        except:
            bot.send_message(message.chat.id, 'üö´ <b>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!</b>', reply_markup=k.menu_main())
    else:
        bot.send_message(message.chat.id, 'üö´ <b>–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã–±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!</b>', reply_markup=k.rm())
@bot.callback_query_handler(func=lambda call: True)
def inline(call):
    #if not(call.message.chat.id in s.ban_list()):
    if not(s.is_registered(call.message.chat.id)):
        s.register_user(call.message.chat.id, name)
    if not(s.is_banned(call.message.chat.id)):
        try:
            bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup='')
        except:
            pass
        if call.data == '–≥–ª–∞–≤–Ω–∞—è':
            bot.send_message(call.message.chat.id, f'ü§ó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ @{config.bot_username}!\n\n‚ñ™Ô∏è –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ —á—É–∂–æ–π –∫–æ–º–Ω–∞—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫–µ <b>üé≤ –ò–≥—Ä–∞</b>.\n\n‚ö†Ô∏è –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª –≤ —Ä–∞–∑–¥–µ–ª–µ <b>üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.</b>', reply_markup=k.menu_main())
        if call.data == '–ø—Ä–æ–≤–µ—Ä–∫–∞_–æ–ø–ª–∞—Ç—ã':
            if p.is_paid(call.message.chat.id):
                amount = p.get_data(call.message.chat.id)['sum']
                s.add_to_user_balance(call.message.chat.id, amount)
                se.money_today += amount
                try:
                    inviter = s.get_user(call.message.chat.id)['invited']
                    am = amount/100*se.refpercents
                    s.add_to_user_balance(inviter, am)
                    try:
                        bot.send_message(config.game_results[0], f'üí∞ –ù–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <a href="tg://user?id={int(inviter)}">{s.get_user(int(inviter))["name"]}</a> –±—ã–ª–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ <code>{am} RUB</code> –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞!')
                    except:
                        pass
                    bot.send_message(inviter, 'üí≥ <b>–ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ</b> <code>{amount/100*se.refpercents} RUB </code> <b>–∑–∞ –ø–æ–∫—É–ø–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –í–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!</b>')
                except:
                    pass
                bot.send_message(call.message.chat.id, f'‚úÖ <b>–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω! –ù–∞ –í–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ</b> <code>{amount} RUB</code>', reply_markup=k.menu_main())
            else:
                p.reject_payment(call.message.chat.id)
                bot.send_message(call.message.chat.id, 'üö´ <b>–ó–∞–∫–∞–∑ –Ω–µ –æ–ø–ª–∞—á–µ–Ω!</b>', reply_markup=k.menu_main())
        elif call.data == '–æ—Ç–º–µ–Ω–∞_–æ–ø–ª–∞—Ç—ã':
            p.reject_payment(call.message.chat.id)
            bot.send_message(call.message.chat.id, 'üö´ <b>–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω!</b>', reply_markup=k.menu_main())
        elif call.data == '–æ–±–Ω–æ–≤–∏—Ç—å_–∏–≥—Ä—ã':
            m, b = g.get_rooms()
            bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=k.menu_games(m, b))
        elif call.data == '–ø–æ–ø–æ–ª–Ω–∏—Ç—å_–±–∞–ª–∞–Ω—Å':
            try:
                msg = bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption='üìù <b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å: </b>', reply_markup=k.back_to_prof())
            except:
                msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='üìù <b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å: </b>',reply_markup=k.back_to_prof())

            bot.register_next_step_handler(msg, deposit)
        elif call.data == '—Å–ª—É—á–∞–π–Ω–∞—è_min':
            def rangame_min(call, bet):
                try:
                    bet = int(bet)
                    errors = ['Err', 'NF', 'FULL']
                    bot.send_message(call.message.chat.id, 'üïì <b>–ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–º–Ω–∞—Ç—ã...</b>\n\n–ò–≥—Ä–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ.', reply_markup=k.rm())
                    for i in range(120):
                        game = g.join_random_game(call.message.chat.id, s.get_user(call.message.chat.id)['name'], int(bet))
                        if not(game in errors) and game != None:
                            if True:
                                id_owner = g.get_game(str(game))["owner"]["id"]
                                id_guest = g.get_game(str(game))["guest"]["id"]
                                players = f'üë§ <a href="tg://user?id={id_owner}">{g.get_game(game)["owner"]["name"]}</a>\nüë§ <a href="tg://user?id={id_guest}">{g.get_game(game)["guest"]["name"]}</a>'
                                bot.send_message(call.message.chat.id, f'üé≤ <b>–ò–≥—Ä–∞ #{g.get_game(game)["key"]}</b>\n\nü•ã <b>–ò–≥—Ä–æ–∫–∏</b>:\n{players}\n\nüí∞ <b>–°—Ç–∞–≤–∫–∞</b>: <code>{g.get_game(str(game))["bet"]} RUB</code>')
                                break
                            
                        else:
                            if i == 119:
                                bot.send_message(call.message.chat.id, 'üö´ <b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã(!</b>', reply_markup=k.menu_main())
                                break
                            else:
                                time.sleep(1)
                except:
                    bot.send_message(call.message.chat.id, 'üö´ <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ –∑–∞–Ω–æ–≤–æ, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /start!')

            if not(s.is_banned(call.message.chat.id)):
                bet = g.mingame
                try:
                    if int(bet) <= s.get_user(call.message.chat.id)['balance'] and not(s.in_room(call.message.chat.id)) and int(bet) >= minbet:
                        Thread(target=rangame_min, args=(call, bet,)).start()
                    elif s.in_room(call.message.chat.id):
                        bot.send_message(call.message.chat.id, 'üö´ <b>–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!</b>')
                    elif int(bet) < minbet:
                        bot.send_message(call.message.chat.id, f'üö´ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - {minbet} RUB!</b>', reply_markup=k.menu_main())
                    else:
                         bot.send_message(call.message.chat.id, 'üö´ <b>–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>', reply_markup=k.ask_for_pay())
                except:
                    bot.send_message(call.message.chat.id, 'üö´ <b>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!</b>', reply_markup=k.menu_main())
            else:
                bot.send_message(call.message.chat.id, 'üö´ <b>–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã–±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!</b>', reply_markup=k.rm())
        elif call.data == '—Å–ª—É—á–∞–π–Ω–∞—è_max':
            def rangame_max(call, bet):
                try:
                    bet = int(bet)
                    errors = ['Err', 'NF', 'FULL']
                    bot.send_message(call.message.chat.id, 'üïì <b>–ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–æ–º–Ω–∞—Ç—ã...</b>\n\n–ò–≥—Ä–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ.', reply_markup=k.rm())
                    for i in range(120):
                        game = g.join_random_game(call.message.chat.id, s.get_user(call.message.chat.id)['name'], int(bet))
                        if not(game in errors) and game != None:
                            if True:
                                id_owner = g.get_game(str(game))["owner"]["id"]
                                id_guest = g.get_game(str(game))["guest"]["id"]
                                players = f'üë§ <a href="tg://user?id={id_owner}">{g.get_game(game)["owner"]["name"]}</a>\nüë§ <a href="tg://user?id={id_guest}">{g.get_game(game)["guest"]["name"]}</a>'
                                bot.send_message(call.message.chat.id, f'üé≤ <b>–ò–≥—Ä–∞ #{g.get_game(game)["key"]}!</b>\n\nü•ã <b>–ò–≥—Ä–æ–∫–∏</b>:\n{players}\n\nüí∞ <b>–°—Ç–∞–≤–∫–∞</b>: <code>{g.get_game(str(game))["bet"]} RUB</code>')
                                break
                            
                        else:
                            if i == 119:
                                bot.send_message(call.message.chat.id, 'üö´ <b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã(!</b>', reply_markup=k.menu_main())
                                break
                            else:
                                time.sleep(1)
                except:
                    bot.send_message(call.message.chat.id, 'üö´ <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ –∑–∞–Ω–æ–≤–æ, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /start!')
            if not(s.is_banned(call.message.chat.id)):
                bet = g.maxgame
                try:
                    if int(bet) <= s.get_user(call.message.chat.id)['balance'] and not(s.in_room(call.message.chat.id)) and int(bet) >= minbet:
                        Thread(target=rangame_max, args=(call, bet,)).start()
                    elif s.in_room(call.message.chat.id):
                        bot.send_message(call.message.chat.id, 'üö´ <b>–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!</b>')
                    elif int(bet) < minbet:
                        bot.send_message(call.message.chat.id, f'üö´ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - {minbet} RUB!</b>', reply_markup=k.menu_main())
                    else:
                        bot.send_message(call.message.chat.id, 'üö´ <b>–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>', reply_markup=k.ask_for_pay())
                except:
                    bot.send_message(call.message.chat.id, 'üö´ <b>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!</b>', reply_markup=k.menu_main())
            else:
                bot.send_message(call.message.chat.id, 'üö´ <b>–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã–±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!</b>', reply_markup=k.rm())
        elif call.data == '—Å–æ–∑–¥–∞—Ç—å_–∏–≥—Ä—É':
            if not(s.in_room(call.message.chat.id)):
                msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'üé≤ <b>–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É</b>\n\n<i>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: {minbet} RUB</i>\n\n<b>–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ):</b>', reply_markup=k.back_to_games())
                bot.register_next_step_handler(msg, create_game)
            else:
                bot.send_message(call.message.chat.id, 'üö´ <b>–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!</b>')
        elif call.data == '—Å–ª—É—á–∞–π–Ω–∞—è_–∏–≥—Ä–∞':
            if not(s.in_room(call.message.chat.id)):
                msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='üìù <b>–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É:</b>', reply_markup=k.back_to_games())
                bot.register_next_step_handler(msg, random_game)
            else:
                bot.send_message(call.message.chat.id, 'üö´ <b>–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!</b>')
        elif call.data == '–∫–æ–Ω—Å–æ–ª—å' and se.is_admin(call.message.chat.id):
            bot.send_message(call.message.chat.id, f'<b>–ö–û–ù–°–û–õ–¨</b>\n\n‚ñ™Ô∏è –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è: <code>{se.money_today} RUB</code>\n‚ñ™Ô∏è –ú–∏–Ω.–¥–µ–ø–æ–∑–∏—Ç: <code>{se.mindeposit} RUB</code>\n‚ñ™Ô∏è –ú–∏–Ω.–≤—ã–≤–æ–¥: <code>{se.minwithdrawal} RUB</code>\n‚ñ™Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π %: <code>{s.refpercents}%</code>\n‚ñ™Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å: <code>{se.refsum} RUB</code>\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é</b>:', reply_markup=k.console_menu())
        elif call.data == '–±–∞–ª–∞–Ω—Å_–∏–∑–º–µ–Ω–∏—Ç—å' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –±–∞–ª–∞–Ω—Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:</b>', reply_markup=k.rm())
            bot.register_next_step_handler(msg, balance_update_id)
        elif call.data == '–º–∏–Ω.–¥–µ–ø–æ–∑–∏—Ç' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>')
            bot.register_next_step_handler(msg, mindeposit)
        elif call.data == '–º–∏–Ω.–≤—ã–≤–æ–¥' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>')
            bot.register_next_step_handler(msg, minwithdrawal)
        elif call.data == '—Ä–µ—Ñ.–±–æ–Ω—É—Å' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>')
            bot.register_next_step_handler(msg, referalsum)
        elif call.data == '—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ_%' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>')
            bot.register_next_step_handler(msg, referalperc)
        elif call.data == '%_–¥–æ—Ö–æ–¥–∞' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>')
            bot.register_next_step_handler(msg, perc)
        elif call.data == '–≤—ã–≤–æ–¥':
            try:
                q = s.getQiwi(call.message.chat.id)
                if q != 0:
                    boole = True
                else:
                    boole = False
            except:
                boole = False
            if boole:
                msg = bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption='üìù <b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏:</b>', reply_markup=k.back_to_prof())
                bot.register_next_step_handler(msg, withdrawal)
            else:
                msg = bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption='üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ QIWI –ö–æ—à–µ–ª—å–∫–∞, –µ–≥–æ —Å–ª–µ–¥—É–µ—Ç –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è:</b>', reply_markup=k.back_to_prof())
                bot.register_next_step_handler(msg, user_qiwi)
        elif call.data == '–±–∞–Ω' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å:</b>', reply_markup=k.rm())
            bot.register_next_step_handler(msg, ban)
        elif call.data == '—Ä–∞–∑–±–∞–Ω' and se.is_admin(call.message.chat.id):
            msg = bot.send_message(call.message.chat.id, 'üìù <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å:</b>', reply_markup=k.rm())
            bot.register_next_step_handler(msg, unban)
        elif call.data == '–∏–≥—Ä—ã_—Å–ª–µ–¥—É—â–∞—è':
            k.gamepages[str(call.message.chat.id)] = k.gamepages[str(call.message.chat.id)] + 1
            lst = g.get_all_game_data(call.message.chat.id)
            bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=k.my_games(call.message.chat.id, lst))
        elif call.data == '–Ω–∞–∑–∞–¥_–∏–≥—Ä—ã':
            try:
                bot.clear_step_handler_by_chat_id(call.message.chat.id)
            except:
                pass
            m, b = g.get_rooms()
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–°–æ–∑–¥–∞–π –Ω–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –∏–≥—Ä—ã –∏–ª–∏ –∑–∞—Ö–æ–¥–∏ –≤ –∫–æ–º–Ω–∞—Ç—ã –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤!', reply_markup=k.menu_games(m, b))
        elif call.data == '–∏–≥—Ä—ã_–ø—Ä–æ—à–ª–∞—è':
            k.gamepages[str(call.message.chat.id)] = k.gamepages[str(call.message.chat.id)] - 1
            lst = g.get_all_game_data(call.message.chat.id)
            bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=k.my_games(call.message.chat.id, lst))

        elif call.data in list(map(str, s.get_user(call.message.chat.id)['games'])):
            game = g.get_old_game(call.data)
            if game['winner'] == call.message.chat.id:
                state = '‚úÖ –ü–æ–±–µ–¥–∞'
            else:
                state = 'üî¥ –ü–æ—Ä–∞–∂–µ–Ω–∏–µ'
            id_owner = game["owner"]['id']
            id_guest = game["guest"]['id']
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'üé≤ <b>–ò–≥—Ä–∞ #{game["key"]}</b> –æ—Ç {game["date"]}\n\nüí∞ <b>–°—Ç–∞–≤–∫–∞</b>: <code>{game["bet"]} RUB</code>\n\nü•ã <b>–ò–≥—Ä–æ–∫–∏</b>:\nüë§ <a href="tg://user?id={id_owner}">{game["owner"]["name"]}</a>\nüë§ <a href="tg://user?id={id_guest}">{game["guest"]["name"]}</a>\n\n<b>–ò—Å—Ö–æ–¥</b>:\n{state}', reply_markup=k.back_to_games())
        elif call.data == '—Ä–µ–π—Ç–∏–Ω–≥':
            msg = 'üèÜ <b>–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n'
            if len(s.get_rating()) != 0:
                for i in s.get_rating()[-10:]:
                    user = s.get_user(i)
                    msg += f'üë§ <a href="tg://user?id={user["id"]}">{user["name"]}</a> - <code>{int(user["balance"])} RUB</code>\n'
            else:
                msg += 'üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.'
            bot.edit_message_text(chat_id=call.message.chat.id, text=msg, reply_markup=k.back_to_games(), message_id=call.message.message_id)
        elif call.data == '–º–æ–∏_–∏–≥—Ä—ã':
            try:
                k.gamepages[str(call.message.chat.id)] = 1
            except:
                pass
            msg = 'üé≤ <b>–í–∞—à–∏ –∏–≥—Ä—ã:</b>'
            try:
                lst = g.get_all_game_data(call.message.chat.id)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=msg, reply_markup=k.my_games(call.message.chat.id, lst))
            except:
                bot.send_message(message.chat.id, 'üö´ <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –∏–≥—Ä –ø–æ–∑–∂–µ!')

        elif call.data == '–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è_—Ä–µ—Ñ–µ—Ä–∞–ª':
            try:
                game = g.refgames[str(call.message.chat.id)]
                if g.get_game(game) != None and not (call.message.chat.id in g.get_game(game)['player_ids']):
                    user = s.get_user(call.message.chat.id)
                    if user['balance'] >= g.get_game(game)['bet']:
                        if g.join_game(game, call.message.chat.id, user["name"]) != 'FULL':
                            id_owner = g.get_game(game)["owner"]["id"]
                            id_guest = g.get_game(game)["guest"]["id"]
                            players = f'üë§ <a href="tg://user?id={id_owner}">{g.get_game(game)["owner"]["name"]}</a>\nüë§ <a href="tg://user?id={id_guest}">{g.get_game(game)["guest"]["name"]}</a>'
                            bot.send_message(call.message.chat.id, f'üé≤ <b>–ò–≥—Ä–∞ #{g.get_game(game)["key"]}</b>\n\nü•ã <b>–ò–≥—Ä–æ–∫–∏</b>:\n{players}\n\nüí∞ –°—Ç–∞–≤–∫–∞: <code>{g.get_game(str(game))["bet"]} RUB</code>')

                        else:
                            bot.send_message(call.message.chat.id, '<b>–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –∫–æ–º–Ω–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!</b>')
                    else:
                        bot.send_message(call.message.chat.id, 'üö´ <b>–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>', reply_markup=k.ask_for_pay())
                elif call.message.chat.id in g.get_game(game)['player_ids']:
                    pass
            except:
                bot.send_message(call.message.chat.id, f'üö´ <b>–û—à–∏–±–∫–∞: –∫–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!</b>', reply_markup=k.menu_main())
        elif call.data == '–Ω–∞–∑–∞–¥_–ø—Ä–æ—Ñ–∏–ª—å':
            try:
                bot.clear_step_handler_by_chat_id(call.message.chat.id)
            except:
                pass
            user = s.get_user(call.message.chat.id)
            bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'<b>–ü–†–û–§–ò–õ–¨</b>: \n\nüÜî <b>–í–∞—à ID</b>: <code>{call.message.chat.id}</code>\nüìÖ <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>: <code>{user["regdate"]}</code>\n\nüí≥ <b>–ë–∞–ª–∞–Ω—Å</b>: <code>{user["balance"]} RUB</code>', reply_markup=k.profile())
        elif call.data == '–ø–∞—Ä—Ç–Ω–µ—Ä–∫–∞':
            link = f't.me/{config.bot_username}?start={call.message.chat.id}'
            bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'<b>–ü–ê–†–¢–ù–ï–†–°–ö–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê</b>\n\n–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π —Å  –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π:\n\n‚ñ™Ô∏è <b>{se.refsum} RUB</b> –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞\n‚ñ™Ô∏è <b>{se.refpercents}%</b> —Å –∫–∞–∂–¥–æ–π –µ–≥–æ –æ–ø–ª–∞—Ç—ã\n\n‚§µÔ∏è –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n {link}\n\nüë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {len(s.get_user(call.message.chat.id)["referals"])}', reply_markup=k.back_to_prof())
    else:
        bot.send_message(call.message.chat.id, 'üö´ <b>–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã–±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!</b>', reply_markup=k.rm())
while True:
    try:
        bot.polling(none_stop=True)
    except ConnectionError:
        print('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è! –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞!')
        time.sleep(2)
    except requests.exceptions.ReadTimeout:
        print('–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...')
        time.sleep(2)
